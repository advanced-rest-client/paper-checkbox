/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   paper-checkbox.html
 */

/// <reference path="../polymer/types/polymer-element.d.ts" />
/// <reference path="../shadycss/apply-shim.d.ts" />
/// <reference path="../iron-checked-element-behavior/iron-checked-element-behavior.d.ts" />
/// <reference path="../iron-behaviors/iron-button-state.d.ts" />
/// <reference path="../anypoint-styles/typography.d.ts" />
/// <reference path="../anypoint-styles/colors.d.ts" />
/// <reference path="../anypoint-behaviors/anypoint-hoverable-behavior.d.ts" />

declare namespace AnypointElements {

  /**
   * ** Anypoint version of the component **
   *
   * This element is to be private and used as a replacemenet to any PolymerElements
   *
   * `<paper-checkbox>` is a button that can be either checked or unchecked.
   * User can tap the checkbox to check or uncheck it.  Usually you use checkboxes
   * to allow user to select multiple options from a set.
   * Avoid using a single checkbox as an option selector and use toggle button intead.
   *
   * ### Example
   *
   * ```html
   * <paper-checkbox>label</paper-checkbox>
   * <paper-checkbox checked>label</paper-checkbox>
   * ```
   *
   * ### Styling
   *
   * `<anypoint-checkbox>` provides the following custom properties and mixins for styling:
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--paper-checkbox` | Mixin applied to the element | `{}`
   * `--paper-checkbox-input-border-bolor` | Border color of the checkbox input square | `--anypoint-color-aluminum4`
   * `--paper-checkbox-label-color` | A color of the label. | ` --anypoint-color-steel1`
   * `--paper-checkbox-label` | Mixin applied to the label | ``
   * `--paper-checkbox-label-checked-color` | Color of checked label | `--anypoint-checkbox-label-color` or `--anypoint-color-steel1`
   * `--paper-checkbox-label-checked` | Mixin applie dto checked label | ``
   * `--paper-checkbox-unchecked-color` | Color of a label of unchecked checkbox | `--anypoint-checkbox-label-color` or `--anypoint-color-steel1`
   * `--paper-checkbox-error-color` | Color of error state | `--anypoint-color-danger`
   * `--paper-checkbox-label-spacing` | Spacing between the label and the checkbox | `0`
   */
  class PaperCheckbox extends
    Anypoint.HoverableBehavior(
    Polymer.IronButtonState(
    Polymer.IronControlState(
    Polymer.IronCheckedElementBehavior(
    Polymer.Element)))) {
    ariaActiveAttribute: string|null|undefined;
    connectedCallback(): void;
    _computeCheckboxClass(checked: any, invalid: any): any;
    _computeCheckmarkClass(checked: any): any;

    /**
     * Synchronizes the element's `active` and `checked` state.
     */
    _buttonStateChanged(): void;
  }
}

interface HTMLElementTagNameMap {
  "paper-checkbox": AnypointElements.PaperCheckbox;
}
